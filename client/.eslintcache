[{"C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\index.js":"1","C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\App.js":"2","C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\components\\LoginForm.js":"3","C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\components\\Dashboard.js":"4"},{"size":218,"mtime":1607108630986,"results":"5","hashOfConfig":"6"},{"size":583,"mtime":1607191995821,"results":"7","hashOfConfig":"6"},{"size":3059,"mtime":1607191625418,"results":"8","hashOfConfig":"6"},{"size":7001,"mtime":1607268588658,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"vlonsp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\index.js",[],["22","23"],"C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\App.js",["24"],"import {useState, useEffect} from 'react';\nimport './App.css';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  //STATE\n  //User data\n  const [userData, setUserData] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  //RENDER\n  return (\n    <div className=\"app\">\n      {!loggedIn &&\n        <LoginForm userData={userData} setUserData={setUserData} setLoggedIn={setLoggedIn} />\n      }\n      {loggedIn &&\n        <Dashboard setLoggedIn={setLoggedIn}/>\n      }\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\components\\LoginForm.js",["25","26"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = (props) => {\r\n    //View\r\n    const [view, setView] = useState('login');\r\n    //Login\r\n    const [loginEmail, setLoginEmail] = useState('');\r\n    const [loginPassword, setLoginPassword] = useState('');\r\n    //Register\r\n    const [regName, setRegName] = useState('');\r\n    const [regEmail, setRegEmail] = useState('');\r\n    const [regPassword, setRegPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        const userEmail = localStorage.getItem('userEmail');\r\n        const userPassword = localStorage.getItem('userPassword');\r\n        const details = {\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n        axios.post('/api/users/login', details)\r\n        .then(function (response) {\r\n            props.setLoggedIn(true);\r\n        })\r\n    }, []);\r\n\r\n    //Login existing user - pass\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        const details = {\r\n            email: loginEmail,\r\n            password: loginPassword\r\n        }\r\n        axios.post('/api/users/login', details)\r\n        .then(function (response) {\r\n            const userToken = response.headers[\"auth-token\"];\r\n            localStorage.setItem('userToken', userToken);\r\n            localStorage.setItem('userEmail', loginEmail);\r\n            localStorage.setItem('userPassword', loginPassword);\r\n            props.setLoggedIn(true);\r\n        })\r\n    }\r\n    //Register new user\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n        name: regName,\r\n        email: regEmail,\r\n        password: regPassword\r\n        }\r\n        axios.post('/api/users/register', payload)\r\n        .then(function (response) {\r\n        setRegName(''); setRegEmail(''); setRegPassword('');\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"auth-container\">\r\n            {view === 'login' &&\r\n            <div className=\"login-container\">\r\n                <input onChange={(e) => setLoginEmail(e.target.value)} placeholder=\"Email\" name=\"email\" value={loginEmail}></input>\r\n                <input onChange={(e) => setLoginPassword(e.target.value)} placeholder=\"Password\" name=\"password\" value={loginPassword}></input>\r\n                <button onClick={login}>Login</button>\r\n            </div>\r\n            }\r\n            {view === 'register' &&\r\n            <div className=\"register-container\">\r\n                <form className=\"input-main\">\r\n                <input onChange={(e) => setRegName(e.target.value)} placeholder=\"Name\" name=\"name\" value={regName}></input>\r\n                <input onChange={(e) => setRegEmail(e.target.value)} placeholder=\"Email\" name=\"email\" value={regEmail}></input>\r\n                <input onChange={(e) => setRegPassword(e.target.value)} placeholder=\"Password\" name=\"password\" value={regPassword}></input>\r\n                <button onClick={register}>Register</button>\r\n                </form>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","C:\\Users\\Legion\\Documents\\Code\\Sandbox\\project-ora\\client\\src\\components\\Dashboard.js",["27","28","29","30","31","32","33"],"import {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = (props) => {\r\n    const [classData, setClassData] = useState({});\r\n    const [classes, setClasses] = useState({});\r\n    //Add class\r\n    const [addClassName, setAddClassName] = useState('');\r\n    const [addClassBook, setAddClassBook] = useState('');\r\n    const [addClassLocalTeacher, setAddClassLocalTeacher] = useState('');\r\n    \r\n    const [studentData, setStudentData] = useState([]);\r\n    const [view, setView] = useState('');\r\n    //Add student\r\n    const [studentName, setStudentName] = useState('');\r\n    const [studentAge, setStudentAge] = useState('');\r\n    const [studentClass, setStudentClass] = useState('');\r\n\r\n    const [renderCounter, setRenderCounter] = useState(0);\r\n    \r\n    //FUNCTIONS\r\n    const numGen = () => {\r\n        return Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        props.setLoggedIn(false);\r\n    }\r\n\r\n    const getStudentData = () => {\r\n        axios.get('./api/students/')\r\n        .then((res) => {\r\n        console.log(res.data);\r\n        setStudentData(res.data);\r\n        setView('students');\r\n        })\r\n        .catch((error) => {\r\n        console.error(\"Error: \" + error)\r\n        })\r\n    }\r\n    const getOneStudent = (id) => {\r\n        axios.get('./api/students/' + id)\r\n        .then((res) => {\r\n        console.log(res.data);\r\n        })\r\n        .catch((error) => {\r\n        console.error(\"Error: \" + error)\r\n        })\r\n    }\r\n\r\n    const createClass = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            name: addClassName,\r\n            book: addClassBook,\r\n            localTeacher: addClassLocalTeacher,\r\n            students: []\r\n        }\r\n        axios.post('/api/classes/create', payload)\r\n        .then(function (response) {\r\n            console.log('Class added successfully.');\r\n            setAddClassName(''); setAddClassBook(''); setAddClassLocalTeacher('');\r\n        })\r\n    }\r\n    const readAllClasses = () => {\r\n        const userToken = localStorage.getItem('userToken');\r\n        axios.get('./api/classes', {\r\n        headers: {\r\n            'auth-token': userToken\r\n        }\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            setClasses(res.data);\r\n            setView('classes');\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error: \" + error)\r\n        })\r\n    }\r\n    const getClassData = (id) => {\r\n        const userToken = localStorage.getItem('userToken');\r\n        axios.get('./api/classes/' + id, {\r\n        headers: {\r\n            'auth-token': userToken\r\n        }\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data[0]);\r\n            setClassData(res.data[0]);\r\n            setView('class');\r\n        })\r\n\r\n        .catch((error) => {\r\n            console.error(\"Error: \" + error)\r\n        })\r\n    }\r\n    \r\n    //Add student\r\n    const createStudent = (e) => {\r\n        e.preventDefault();\r\n        const newClassData = classData;\r\n        const student = {\r\n          \"name\": studentName,\r\n          \"age\": studentAge,\r\n          \"class\": classData.name,\r\n          \"_id\": numGen()\r\n        }\r\n        newClassData.students.push(student);\r\n        axios.put(\"/api/classes/createStudent\", classData)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            setClassData(newClassData);\r\n            setStudentName(''); setStudentAge('');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    //Remove student\r\n    const deleteStudent = (id) => {\r\n        const newClassData = classData;\r\n        let removeIndex = newClassData.students.map(function(student) { return student._id; }).indexOf(id);\r\n        newClassData.students.splice(removeIndex, 1);\r\n        axios.put(\"/api/classes/deleteStudent\", newClassData)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            setClassData(newClassData);\r\n            setRenderCounter(renderCounter + 1);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"view-selector\">\r\n                <a onClick={readAllClasses}>View classes</a>\r\n            </div>\r\n            <form className=\"add-class-container\">\r\n                <input type=\"text\" value={addClassName} placeholder=\"Class name\" onChange={(e) => setAddClassName(e.target.value)}></input>\r\n                <input type=\"text\" value={addClassBook} placeholder=\"Class book\" onChange={(e) => setAddClassBook(e.target.value)}></input>\r\n                <input type=\"text\" value={addClassLocalTeacher} placeholder=\"Local teacher\" onChange={(e) => setAddClassLocalTeacher(e.target.value)}></input>\r\n                <button onClick={createClass}>Add class</button>\r\n            </form>\r\n            <div className=\"content-container\">\r\n                <div className=\"classes-container\">\r\n                    {view === 'classes' && classes.map(_class => \r\n                    <div className=\"class-card\" key={_class._id}>\r\n                        <h3>{_class.name}</h3>\r\n                        <p>Book: {_class.book}</p>\r\n                        <p>Students: {_class.students.length}</p>\r\n                        <button onClick={(id) => getClassData(_class._id)}>View class</button>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n                {view === 'class' &&\r\n                <div className=\"class-dashboard\">\r\n                    <div className=\"class-details-container\">\r\n                        <h2>{classData.name}</h2>\r\n                        <h2>{classData.book}</h2>\r\n                        <h2>{classData.localTeacher}</h2>\r\n                    </div>\r\n                    <form className=\"add-student-container\">\r\n                        <input type=\"text\" value={studentName} placeholder=\"name...\" onChange={(e) => setStudentName(e.target.value)}></input>\r\n                        <input type=\"text\" value={studentAge} placeholder=\"age...\" onChange={(e) => setStudentAge(e.target.value)}></input>\r\n                        <button onClick={createStudent}>Add student</button>\r\n                    </form>\r\n                    <div className=\"students-container\">\r\n                        {classData.students.map(student =>\r\n                            <div className=\"student-card\">\r\n                                <h3>{student.name}</h3>\r\n                                <p>Age: {student.age}</p>\r\n                                <button onClick={(id) => deleteStudent(student._id)}>Remove student</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className=\"logout-container\">\r\n                <a onClick={logout}>Logout</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":19,"nodeType":"40","messageId":"41","endLine":1,"endColumn":28},{"ruleId":"38","severity":1,"message":"42","line":6,"column":18,"nodeType":"40","messageId":"41","endLine":6,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":26,"column":8,"nodeType":"45","endLine":26,"endColumn":10,"suggestions":"46"},{"ruleId":"38","severity":1,"message":"47","line":12,"column":12,"nodeType":"40","messageId":"41","endLine":12,"endColumn":23},{"ruleId":"38","severity":1,"message":"48","line":17,"column":12,"nodeType":"40","messageId":"41","endLine":17,"endColumn":24},{"ruleId":"38","severity":1,"message":"49","line":17,"column":26,"nodeType":"40","messageId":"41","endLine":17,"endColumn":41},{"ruleId":"38","severity":1,"message":"50","line":31,"column":11,"nodeType":"40","messageId":"41","endLine":31,"endColumn":25},{"ruleId":"38","severity":1,"message":"51","line":42,"column":11,"nodeType":"40","messageId":"41","endLine":42,"endColumn":24},{"ruleId":"52","severity":1,"message":"53","line":140,"column":17,"nodeType":"54","endLine":140,"endColumn":45},{"ruleId":"52","severity":1,"message":"53","line":184,"column":17,"nodeType":"54","endLine":184,"endColumn":37},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setView' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["57"],"'studentData' is assigned a value but never used.","'studentClass' is assigned a value but never used.","'setStudentClass' is assigned a value but never used.","'getStudentData' is assigned a value but never used.","'getOneStudent' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [props]",{"range":"60","text":"61"},[873,875],"[props]"]